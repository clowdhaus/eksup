apiVersion: v1
kind: Namespace
metadata:
  name: replicaset
  labels:
    name: replicaset
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: bad-rs
  namespace: replicaset
  labels:
    app: rs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rs
  template:
    metadata:
      labels:
        app: rs
    spec:
      containers:
        - name: goproxy
          image: registry.k8s.io/goproxy:0.1
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: dockersock
              mountPath: '/var/run/docker.sock'
      volumes:
        - name: dockersock
          hostPath:
            path: /var/run/docker.sock
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: good-rs
  namespace: replicaset
  labels:
    app: rs
spec:
  replicas: 3
  minReadySeconds: 3
  selector:
    matchLabels:
      app: rs
  template:
    metadata:
      labels:
        app: rs
    spec:
      topologySpreadConstraints:
        - maxSkew: 1
          whenUnsatisfiable: ScheduleAnyway
          topologyKey: topology.kubernetes.io/zone
          labelSelector:
            matchLabels:
              app: good-rs
      containers:
        - name: goproxy
          image: registry.k8s.io/goproxy:0.1
          ports:
          - containerPort: 8080
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 20
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          hostPath:
            path: /tmp
